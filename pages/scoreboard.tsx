import type { NextPage } from "next";
import Head from "next/head";
import Rules from "../components/onboarding/Rules";
import { useQuery } from "../convex/_generated";
import Onboarding from "../components/onboarding/Onboarding";
import { Slide, Team } from "../util/common";
import { SCOREBOARD } from "../util/config";
import { useEffect, useState } from "react";
import TeamCard from "../components/scoreboard/TeamCard";
import Pounces from "../components/scoreboard/Pounces";
import TeamColumn from "../components/scoreboard/TeamColumn";

const Scoreboard: NextPage = () => {
  const teams: Team[] | undefined = useQuery("allTeams");
  const quizStarted = useQuery("quizStarted");
  const currentSlide: Slide | undefined = useQuery("currentSlide");
  const { pounceWindowOpen } = useQuery("pounceWindow") || {
    pounceWindowOpen: false,
  };
  const [maxPoints, setMaxPoints] = useState(0);

  useEffect(() => {
    setMaxPoints(
      (teams?.length ?? 0) > 1
        ? teams?.sort((a, b) => b.points - a.points)[0].points ?? 0
        : 0
    );
  }, [teams]);

  return (
    <div>
      <Head>
        <title>Score | ExQuiz</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="h-screen w-screen p-10 flex flex-col items-center justify-center">
        <div className="mb-10">
          <h1 className="text-6xl font-bold text-center text-slate-700 mb-1">
            {SCOREBOARD.QUIZNAME}
          </h1>
          {quizStarted?.value === true &&
            (pounceWindowOpen ? (
              <div className="text-4xl font-bold text-green-500 text-center">
                Pounce Window Open
              </div>
            ) : (
              <div className="text-4xl font-bold text-red-500 text-center">
                Pounce Window Closed
              </div>
            ))}
        </div>

        {quizStarted?.value === true ? (
          <div className="max-w-6xl h-full w-full pt-10 mx-auto">
            <div className={`w-full h-full flex justify-center gap-x-[80px]`}>
              {currentSlide &&
                teams
                  // ?.sort((a, b) => b.points - a.points)
                  ?.sort((a, b) => a.tnumber - b.tnumber)
                  .map((team, i) => (
                    <TeamColumn
                      team={team}
                      key={i}
                      maxPoints={maxPoints}
                      currentSlide={currentSlide}
                    />
                  ))}
            </div>
          </div>
        ) : (
          <div className="max-w-6xl w-full mx-auto grid grid-cols-2 gap-3">
            {teams?.map((team, i) => (
              <TeamCard team={team} key={i} />
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default Scoreboard;
